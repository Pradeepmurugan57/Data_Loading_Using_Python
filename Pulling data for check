# Import necessary libraries
import snowflake.connector                                                           # Snowflake Python connector to connect and query Snowflake database
import pandas as pd                                                                  # Pandas library for data manipulation and analysis
import warnings                                                                      # Built-in module to manage and suppress warning messages

# Ignore warning messages so they don't clutter the output
warnings.filterwarnings('ignore')

# Print a message to indicate the script has started
print("Script started")

# Create a connection to the Snowflake database
# Provide user credentials and connection details
conn = snowflake.connector.connect(
    user="xxxxx",                                                                   # Your Snowflake username
    password="xxxxx",                                                               # Your Snowflake password
    account="xxxxx",                                                                # Your Snowflake account identifier (org/account info)
    warehouse="COMPUTE_WH",                                                         # The virtual warehouse used to execute queries
    database="TEST_BATCH",                                                          # The database to connect to
    schema="PUBLIC"                                                                 # The schema inside the database
)

# Print message if the connection was established successfully
print("Script completed successfully")

# ---------------------------------------------------------------------
# Query Section
# ---------------------------------------------------------------------

# Notify that data is being pulled from the COVID_DEATH_STATS table
print("Pulling data from COVID_DEATH_STATS FROM SNOWFLAKE...")

# Execute a SQL query in Snowflake and load the result directly into a pandas DataFrame
df_death_stats = pd.read_sql("""
    SELECT * 
    FROM TEST_BATCH.PUBLIC.COVID_DEATH_STATS 
    LIMIT 50
""", conn)
                                                                                    # - SELECT *: Fetches all columns from the table
                                                                                    # - FROM TEST_BATCH.PUBLIC.COVID_DEATH_STATS: Table path (database.schema.table)
                                                                                    # - LIMIT 50: Restricts results to only 50 rows for testing or preview

# Print the shape of the DataFrame (rows x columns) for a quick summary
print(f"COVID_DEATH_STATS: {df_death_stats.shape[0]} rows, {df_death_stats.shape[1]} columns")

# Display the first 5 rows of the DataFrame to preview the pulled data
print(df_death_stats.head())


